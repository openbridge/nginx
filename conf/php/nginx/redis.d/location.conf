# Redis GET operation
location = /redis_get {
    internal;  # Only accessible from inside nginx
    
    # Use a more specific key format for application data
    set_unescape_uri $cache_type $arg_type;   # e.g., session, query, computation
    set_unescape_uri $cache_key $arg_key;     # specific identifier
    set_md5 $redis_key "$cache_type:$cache_key";
    
    redis_pass redis;
    
    # Only add cache status header for debugging
    add_header X-Redis-Cache-Status $upstream_cache_status always;
    error_page 500 502 503 = @fallback;
}

# Redis SET operation
location = /redis_put {
    internal;
    
    # More specific key structure
    set_unescape_uri $cache_type $arg_type;
    set_unescape_uri $cache_key $arg_key;
    set_unescape_uri $exptime $arg_exptime;
    set_md5 $redis_key "$cache_type:$cache_key";
    
    redis2_query set $redis_key $echo_request_body;
    redis2_query expire $redis_key $exptime;
    redis2_pass redis;
}

location @fallback {
    internal;
    return 404;  # Let the application handle fallback logic
}

location = /purge {
    allow 127.0.0.1;
    deny all;
    
    set_unescape_uri $cache_type $arg_type;
    set_unescape_uri $cache_key $arg_key;
    set_md5 $redis_key "$cache_type:$cache_key";
    
    redis2_query del $redis_key;
    redis2_pass redis;
}