user                                   www-data;
worker_processes                       auto;
worker_rlimit_nofile                   65535;
timer_resolution                       100ms;
pcre_jit                               on;
thread_pool                            default threads=32 max_queue=65536;

load_module                            "/usr/lib/nginx/modules/ngx_http_geoip2_module.so";
load_module                            "/usr/lib/nginx/modules/ngx_stream_geoip2_module.so";

events {
    worker_connections                 65535;
    multi_accept                       on;
    use                                epoll;
}

http {
    # Global MIME types, encoding, and default type
    include                            /etc/nginx/mime.type;
    default_type                       application/octet-stream;
    charset                            UTF-8;
    etag                               on;

    # Replace with your Docker network CIDR if needed
    set_real_ip_from 172.0.0.0/8;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 127.0.0.1;
    set_real_ip_from ::1;

    # Define which header to use for real IP (choose one)
    real_ip_header X-Forwarded-For;
    # real_ip_header X-Real-IP;

    # Process the last IP in X-Forwarded-For as the client IP
    real_ip_recursive off;

    # File transfer and connection tuning
    sendfile                           on;  # Enable sendfile for performance
    sendfile_max_chunk                 512k;
    send_timeout                       15s;
    tcp_nopush                         on;
    tcp_nodelay                        on;
    keepalive_timeout                  30;
    keepalive_requests                 1000;
    lingering_time                     20s;
    lingering_timeout                  5s;
    keepalive_disable                  msie6;
    reset_timedout_connection          on;
    request_pool_size                  32k;
    output_buffers                     8 256k;
    postpone_output                    1460;

    # SSL and client body settings
    ssl_early_data                     on;
    client_max_body_size               100M;
    client_body_buffer_size            512k;
    client_header_buffer_size          3m;
    large_client_header_buffers        4 256k;

    # File caching for static assets and log files
    open_file_cache                    max=75000 inactive=60s;
    open_file_cache_valid              120s;
    open_file_cache_min_uses           2;
    open_file_cache_errors             off;
    open_log_file_cache                max=20000 inactive=30s min_uses=2;

    ignore_invalid_headers             on;

    # Hash settings for maps and variables
    map_hash_bucket_size               256;
    map_hash_max_size                  4096;
    types_hash_max_size                2048;
    variables_hash_max_size            2048;

    # Upstream definitions (shared by all vhosts)
    upstream php-fpm                   { include /etc/nginx/upstream.d/php-fpm.conf; }
    upstream proxy                     { include /etc/nginx/upstream.d/proxy.conf; }
    upstream redis                     { include /etc/nginx/upstream.d/redis.conf; }

    # Global Logging Formats (used by all sites)
    log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';
    log_format main_ext '{ "@timestamp": "$time_iso8601", '
                          '"@fields": { '
                          '"remote_addr": "$remote_addr", '
                          '"remote_user": "$remote_user", '
                          '"status": "$status", '
                          '"request": "$request", '
                          '"request_uri": "$request_uri", '
                          '"request_method": "$request_method", '
                          '"request_time": "$request_time", '
                          '"request_uri_query": "$query_string", '
                          '"http_referrer": "$http_referer", '
                          '"http_user_agent": "$http_user_agent", '
                          '"http_forward": "$proxy_add_x_forwarded_for", '
                          '"http_header": "$http_x_header", '
                          '"body_bytes_sent": "$body_bytes_sent", '
                          '"server_name": "$server_name", '
                          '"upstream_addr": "$upstream_addr", '
                          '"upstream_status": "$upstream_status", '
                          '"upstream_response_time": "$upstream_response_time", '
                          '"upstream_response_length": "$upstream_response_length", '
                          '"upstream_cache_status": "$upstream_cache_status", '
                          '"geoip2_country_code": "$geoip2_data_country_code", '
                          '"geoip2_country_name": "$geoip2_data_country_name", '
                          '"geoip2_city_name": "$geoip2_data_city_name", '
                          '"geoip2_region_name": "$geoip2_data_region_name", '
                          '"geoip2_latitude": "$geoip2_data_latitude", '
                          '"geoip2_longitude": "$geoip2_data_longitude" } }';

    access_log                           {{LOG_PREFIX}}/access.log main_ext;
    error_log                            {{LOG_PREFIX}}/access.log warn;  # Use a higher level (e.g. warn) in production

    # DNS Resolver Settings
    resolver                             1.1.1.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout                     30s;

    # Global header maps for proxy and SSL
    map                                  $http_x_forwarded_proto $proxy_x_forwarded_proto { include /etc/nginx/map.d/header/proto.map; }
    map                                  $http_x_forwarded_port $proxy_x_forwarded_port { include /etc/nginx/map.d/header/port.map; }
    map                                  $scheme $proxy_x_forwarded_ssl { include /etc/nginx/map.d/header/scheme.map; }
    map                                  $http_upgrade $proxy_connection { include /etc/nginx/map.d/header/upgrade.map; }

    # Global bot/crawler detection maps
    map                                  $host:$server_port$request_uri $noindex { include /etc/nginx/map.d/header/robot.map; }
    map                                  $http_user_agent $bot_pre { include /etc/nginx/map.d/referrer/bot.map; }

    # Global cache control maps
    map                                  $sent_http_content_type $expires { include /etc/nginx/map.d/cache/expires.map; }
    map                                  $request_uri $no_cache_uri { include /etc/nginx/map.d/nocache/uri.map; }
    map                                  $http_cookie $no_cookie { include /etc/nginx/map.d/nocache/cookie.map; }
    map                                  $request_method $no_cache_method { include /etc/nginx/map.d/nocache/method.map; }
    map                                  $no_cache_uri$no_cookie$no_cache_method $skip_cache { default 0; ~.*1.* 1; }

    # Global redirect handling maps
    map                                  $request_uri $redirect_uri { include /etc/nginx/map.d/redirects/*.map; }

    # Global Cache Configurations
    fastcgi_cache_path                   {{CACHE_PREFIX}}/fastcgi keys_zone=fastcgicache:10m levels=1:2 inactive=30m max_size=128m;
    fastcgi_cache_key                    $scheme$request_method$host$request_uri$is_args$args;

    proxy_cache_path                     {{CACHE_PREFIX}}/proxy keys_zone=proxycache:10m levels=1:2 inactive=30m max_size=128m;
    proxy_cache_key                      $scheme$request_method$host$request_uri$is_args$args;

    # Global Purge Control
    include                              /etc/nginx/conf.d/geo.conf;
    geo                                  $purge_allowed { include /etc/nginx/geo.d/purge.conf; }

    # Global Expiration Settings and Index Files
    expires                              $expires;
    index                                app.php index.php index.html default.html;

    # Include global modules for compression and security
    include                              /etc/nginx/conf.d/brotli.conf;
    include                              /etc/nginx/conf.d/gzip.conf;
    include                              /etc/nginx/conf.d/zstd.conf;
    include                              /etc/nginx/conf.d/proxy.conf;
    include                              /etc/nginx/conf.d/botblocker-nginx-settings.conf;
    include                              /etc/nginx/conf.d/globalblacklist.conf;
    include                              /etc/nginx/map.d/geo/access.map;

    # Include available sites (vhosts)
    include                              /etc/nginx/sites-available/*;



}
