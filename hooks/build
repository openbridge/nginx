#!/bin/bash

set -euo pipefail

# Function to log messages
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Function to handle errors
handle_error() {
    log "Error occurred on line $1"
    exit 1
}

trap 'handle_error $LINENO' ERR

# Configuration
GITHUB_API_URL="https://api.github.com/repos/nginxinc/docker-nginx/tags"
DOCKER_REPO="openbridge/nginx"
IMG=$(basename "$DOCKER_REPO")
DOCKERFILE_PATH="./Dockerfile"

# Check if Dockerfile exists
if [[ ! -f "$DOCKERFILE_PATH" ]]; then
    log "Error: Dockerfile not found at $DOCKERFILE_PATH"
    log "Current working directory: $(pwd)"
    log "Contents of current directory:"
    ls -la
    exit 1
fi

# Fetch NGINX releases
log "Fetching NGINX releases..."
RELEASES=$(curl -qsL "$GITHUB_API_URL" | jq -r '.[].name' | sort -rV)

if [[ -z "$RELEASES" ]]; then
    log "Error: Failed to fetch releases"
    exit 1
fi

# Build images for each release
for tag in $RELEASES; do
    log "Building ${IMG}:${tag}"
    if ! docker build -f "$DOCKERFILE_PATH" --build-arg NGINX_VERSION="$tag" -t "${DOCKER_REPO}:${tag}" .; then
        log "Error: Failed to build ${IMG}:${tag}"
        log "Dockerfile contents:"
        cat "$DOCKERFILE_PATH"
        continue
    fi
done

# Build latest image
latest=$(echo "$RELEASES" | head -n1)
log "Building ${IMG}:latest (version ${latest})"
if ! docker build -f "$DOCKERFILE_PATH" --build-arg NGINX_VERSION="$latest" -t "${DOCKER_REPO}:latest" .; then
    log "Error: Failed to build ${IMG}:latest"
    log "Dockerfile contents:"
    cat "$DOCKERFILE_PATH"
    exit 1
fi

log "Build process completed successfully"
exit 0